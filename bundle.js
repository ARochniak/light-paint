!function(t){var e={};function i(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(s,r,function(e){return t[e]}.bind(null,r));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);class s{constructor(t){this.canvas=t,this.ctx=this.canvas.getContext("2d")}clearCanvas(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}drawPoint(t,e,i,s){const r=this.ctx;r.lineCap="round",r.strokeStyle=i,r.lineWidth=s,r.lineTo(t,e),r.stroke(),r.beginPath(),r.moveTo(t,e)}endDrawing(){this.ctx.beginPath()}drawReact({x:t,y:e,width:i,height:s,color:r,strokeWidth:o}){this.setColor(r),this.ctx.beginPath(),this.ctx.strokeStyle="black",this.ctx.lineWidth=o,this.ctx.fillRect(t,e,i,s),this.ctx.rect(t,e,i,s),this.ctx.stroke(),this.ctx.beginPath()}drawArrow({x:t,y:e,endX:i,endY:s,color:r,strokeWidth:o}){this.ctx.beginPath(),this.ctx.strokeStyle=r,this.ctx.lineWidth=o;const a=i-t,n=s-e,c=Math.atan2(n,a);this.ctx.moveTo(t,e),this.ctx.lineTo(i,s),this.ctx.moveTo(i,s),this.ctx.lineTo(i-10*Math.cos(c-Math.PI/6),s-10*Math.sin(c-Math.PI/6)),this.ctx.moveTo(i,s),this.ctx.moveTo(i,s),this.ctx.lineTo(i-10*Math.cos(c+Math.PI/6),s-10*Math.sin(c+Math.PI/6)),this.ctx.stroke(),this.ctx.beginPath()}setColor(t){this.ctx.fillStyle=t}}class r{constructor(){this.savedObjects=[],this.curvePoints=[],this.startPoint={x:0,y:0},this.endPoint={x:0,y:0},this.activeDrawingTool="pencil",this.color="black",this.strokeWidth=1,this.isDrawing=!1,this.isRedraw=!1}getDrawingParameters(){return{x:this.startPoint.x,y:this.startPoint.y,endX:this.endPoint.x,endY:this.endPoint.y,color:this.color,strokeWidth:this.strokeWidth}}mustRedraw(){return!this.isRedraw&&"pencil"!==this.activeDrawingTool&&this.savedObjects}clearState(){this.savedObjects=[],this.curvePoints=[],this.startPoint={x:0,y:0},this.endPoint={x:0,y:0}}saveShape(t){this.savedObjects.push({startPoint:{...this.startPoint},endPoint:t,color:this.color,strokeWidth:this.strokeWidth,drawingTool:this.activeDrawingTool})}saveCurve(){this.savedObjects.push({curvePoints:[...this.curvePoints],color:this.color,strokeWidth:this.strokeWidth,drawingTool:this.activeDrawingTool}),this.curvePoints=[]}addCurvePoint(t,e){this.curvePoints.push({x:t,y:e})}startDrawing(t,e){this.isDrawing=!0,this.setStartPoint(t,e)}stopDrawing(){this.isDrawing=!1}startRedraw(){this.isRedraw=!0}stopRedraw(){this.isRedraw=!1}setStartPoint(t,e){this.startPoint={x:t,y:e}}setEndPoint(t,e){this.endPoint={x:t,y:e}}setColor(t){this.color=t}setStrokeWidth(t){this.strokeWidth=t}setActiveDrawingTool(t){this.activeDrawingTool=t}}var o=(t,e,i)=>{const s=t.getBoundingClientRect();return{x:e-s.left,y:i-s.top}};var a=(t,e)=>{document.onselect=()=>!1,document.querySelector(".paint__rect").onclick=()=>{t.setRect()},document.querySelector(".paint__arrow").onclick=()=>{t.setArrow()},document.querySelector(".paint__pencil").onclick=()=>{t.setPencil()},document.querySelector(".paint__color").onchange=e=>{const i=e.target.value;t.setColor(i)},document.querySelector(".paint__stroke-width").onchange=e=>{const i=e.target.value;t.setStrokeWidth(i)},document.querySelector(".paint__clear").onclick=()=>{t.clear()},document.querySelector(".paint__save").onclick=()=>{t.saveLocally()},document.querySelector(".paint__load").onclick=()=>{t.loadFromLocal()},e.addEventListener("mousedown",i=>{const s=o(e,i.clientX,i.clientY);t.state.startDrawing(s.x,s.y),t.draw(s.x,s.y)}),e.addEventListener("mousemove",i=>{const s=o(e,i.clientX,i.clientY);t.draw(s.x,s.y)}),document.addEventListener("mouseup",i=>{const s=o(e,i.clientX,i.clientY);t.state.isDrawing&&t.stopDrawing({x:s.x,y:s.y})})};var n=t=>{t.width=t.clientWidth,t.height=t.clientHeight};const c=document.querySelector(".paint__canvas");n(c),a(new class{constructor(t){this.drawer=new s(t),this.state=new r,this.tools={pencil:this.drawCurve.bind(this),rect:this.drawRect.bind(this),arrow:this.drawArrow.bind(this)}}clear(){this.drawer.clearCanvas(),this.state.clearState()}saveLocally(){((t,e)=>{const i=JSON.stringify(t);localStorage.setItem(e,i)})(this.state.savedObjects,"drawing")}loadFromLocal(){this.state.savedObjects=(t=>{const e=localStorage.getItem(t);return JSON.parse(e)})("drawing"),this.state.isDrawing=!0,this.redraw(),this.state.isDrawing=!1}draw(t,e){if(!this.state.isDrawing)return!1;this.state.setEndPoint(t,e),this.state.mustRedraw()&&this.redraw(),this.tools[this.state.activeDrawingTool]()}stopDrawing(t){this.state.stopDrawing(),this.drawer.endDrawing(),this.saveObject(t)}drawCurve(){const{x:t,y:e}=this.state.endPoint,i=this.state.color,s=this.state.strokeWidth;this.drawer.drawPoint(t,e,i,s),this.state.addCurvePoint(t,e)}drawRect(t=this.state.getDrawingParameters()){let{x:e,y:i,endX:s,endY:r,color:o,strokeWidth:a}=t;const n=s-e,c=r-i;this.drawer.drawReact({x:e,y:i,width:n,height:c,color:o,strokeWidth:a})}drawArrow(t=this.state.getDrawingParameters()){this.drawer.drawArrow(t)}redraw(){this.drawer.clearCanvas(),this.state.startRedraw(),this.state.savedObjects.forEach(t=>{if("pencil"===t.drawingTool)t.curvePoints.forEach(e=>{this.drawer.drawPoint(e.x,e.y,t.color,t.strokeWidth)}),this.drawer.endDrawing();else{const e=this.getObjectDrawingParameters(t);this.tools[t.drawingTool](e)}}),this.state.stopRedraw()}getObjectDrawingParameters(t){return{x:t.startPoint.x,y:t.startPoint.y,endX:t.endPoint.x,endY:t.endPoint.y,color:t.color}}saveObject(t){"pencil"===this.state.activeDrawingTool?this.state.saveCurve():this.state.saveShape(t)}setPencil(){this.state.setActiveDrawingTool("pencil")}setRect(){this.state.setActiveDrawingTool("rect")}setArrow(){this.state.setActiveDrawingTool("arrow")}setColor(t){this.state.setColor(t)}setStrokeWidth(t){this.state.setStrokeWidth(t)}}(c),c)}]);
//# sourceMappingURL=bundle.js.map