!function(t){var e={};function s(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)s.d(i,r,function(e){return t[e]}.bind(null,r));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);class i{constructor(t){this.canvas=t,this.ctx=this.canvas.getContext("2d")}clearCanvas(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}drawPoint(t,e,s){const i=this.ctx;i.lineCap="round",i.strokeStyle=s,i.lineTo(t,e),i.stroke(),i.beginPath(),i.moveTo(t,e)}endDrawing(){this.ctx.beginPath()}drawReact({x:t,y:e,width:s,height:i,color:r}){this.setColor(r),this.ctx.beginPath(),this.ctx.strokeFill="black",this.ctx.rect(t,e,s,i),this.ctx.fillRect(t,e,s,i),this.ctx.stroke(),this.ctx.beginPath()}drawArrow({x:t,y:e,endX:s,endY:i,color:r}){this.ctx.beginPath(),this.ctx.strokeStyle=r;const a=s-t,o=i-e,n=Math.atan2(o,a);this.ctx.moveTo(t,e),this.ctx.lineTo(s,i),this.ctx.moveTo(s,i),this.ctx.lineTo(s-10*Math.cos(n-Math.PI/6),i-10*Math.sin(n-Math.PI/6)),this.ctx.moveTo(s,i),this.ctx.moveTo(s,i),this.ctx.lineTo(s-10*Math.cos(n+Math.PI/6),i-10*Math.sin(n+Math.PI/6)),this.ctx.stroke(),this.ctx.beginPath()}setColor(t){this.ctx.fillStyle=t}}class r{constructor(){this.savedObjects=[],this.curvePoints=[],this.startPoint={x:0,y:0},this.endPoint={x:0,y:0},this.activeDrawingTool="pencil",this.color="black",this.isDrawing=!1,this.isRedraw=!1}clearState(){this.savedObjects=[],this.curvePoints=[],this.startPoint={x:0,y:0},this.endPoint={x:0,y:0}}saveShape(t){this.savedObjects.push({startPoint:{...this.startPoint},endPoint:t,color:this.color,drawingTool:this.activeDrawingTool})}saveCurve(){this.savedObjects.push({curvePoints:[...this.curvePoints],color:this.color,drawingTool:this.activeDrawingTool}),this.curvePoints=[]}addCurvePoint(t,e){this.curvePoints.push({x:t,y:e})}startDrawing(t,e){this.isDrawing=!0,this.setStartPoint(t,e)}stopDrawing(){this.isDrawing=!1}startRedraw(){this.isRedraw=!0}stopRedraw(){this.isRedraw=!1}setStartPoint(t,e){this.startPoint={x:t,y:e}}setEndPoint(t,e){this.endPoint={x:t,y:e}}setColor(t){this.color=t}setActiveDrawingTool(t){this.activeDrawingTool=t}}var a=(t,e,s)=>{const i=t.getBoundingClientRect();return{x:e-i.left,y:s-i.top}};var o=(t,e)=>{document.onselect=()=>!1,document.querySelector(".paint__rect").onclick=()=>{t.setRect()},document.querySelector(".paint__arrow").onclick=()=>{t.setArrow()},document.querySelector(".paint__pencil").onclick=()=>{t.setPencil()},document.querySelector(".paint__color").onchange=e=>{const s=e.target.value;t.setColor(s)},document.querySelector(".paint__clear").onclick=()=>{t.clear()},document.querySelector(".paint__save").onclick=()=>{t.saveLocally()},document.querySelector(".paint__load").onclick=()=>{t.loadFromLocal()},e.addEventListener("mousedown",s=>{const i=a(e,s.clientX,s.clientY);t.state.startDrawing(i.x,i.y)}),e.addEventListener("mousemove",s=>{const i=a(e,s.clientX,s.clientY);t.draw(i.x,i.y)}),document.addEventListener("mouseup",s=>{const i=a(e,s.clientX,s.clientY);t.state.isDrawing&&t.stopDrawing({x:i.x,y:i.y})})};var n=t=>{t.width=t.clientWidth,t.height=t.clientHeight};const c=document.querySelector(".paint__canvas");n(c),o(new class{constructor(t){this.drawer=new i(t),this.state=new r,this.tools={pencil:this.drawCurve.bind(this),rect:this.drawRect.bind(this),arrow:this.drawArrow.bind(this)}}clear(){this.drawer.clearCanvas(),this.state.clearState()}saveLocally(){((t,e)=>{const s=JSON.stringify(t);localStorage.setItem(e,s)})(this.state.savedObjects,"drawing")}loadFromLocal(){this.state.savedObjects=(t=>{const e=localStorage.getItem(t);return JSON.parse(e)})("drawing"),this.state.isDrawing=!0,this.redraw(),this.state.isDrawing=!1}draw(t,e){this.state.setEndPoint(t,e),this.tools[this.state.activeDrawingTool]()}stopDrawing(t){this.state.stopDrawing(),this.drawer.endDrawing(),this.saveObject(t)}drawCurve(){if(!this.state.isDrawing)return!1;const{x:t,y:e}=this.state.endPoint,s=this.state.color;this.drawer.drawPoint(t,e,s),this.state.addCurvePoint(t,e)}drawRect({x:t=this.state.startPoint.x,y:e=this.state.startPoint.y,endX:s=this.state.endPoint.x,endY:i=this.state.endPoint.y,color:r=this.state.color}={}){if(!this.state.isDrawing)return!1;this.state.isRedraw||(this.drawer.clearCanvas(),this.redraw());const a=s-t,o=i-e;this.drawer.drawReact({x:t,y:e,width:a,height:o,color:r})}drawArrow({x:t=this.state.startPoint.x,y:e=this.state.startPoint.y,endX:s=this.state.endPoint.x,endY:i=this.state.endPoint.y,color:r=this.state.color}={}){if(!this.state.isDrawing)return!1;this.state.isRedraw||(this.drawer.clearCanvas(),this.redraw()),this.drawer.drawArrow({x:t,y:e,endX:s,endY:i,color:r})}redraw(){if(this.drawer.clearCanvas(),!this.state.savedObjects)return!1;this.state.startRedraw(),this.state.savedObjects.forEach(t=>{"pencil"===t.drawingTool?(t.curvePoints.forEach(e=>{this.drawer.drawPoint(e.x,e.y,t.color)}),this.drawer.endDrawing()):this.tools[t.drawingTool]({x:t.startPoint.x,y:t.startPoint.y,endX:t.endPoint.x,endY:t.endPoint.y,color:t.color})}),this.state.stopRedraw()}saveObject(t){"pencil"===this.state.activeDrawingTool?this.state.saveCurve():this.state.saveShape(t)}setPencil(){this.state.setActiveDrawingTool("pencil")}setRect(){this.state.setActiveDrawingTool("rect")}setArrow(){this.state.setActiveDrawingTool("arrow")}setColor(t){this.state.setColor(t)}}(c),c)}]);
//# sourceMappingURL=bundle.js.map